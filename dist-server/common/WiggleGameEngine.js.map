{"version":3,"file":"WiggleGameEngine.js","names":["_typeof","obj","Symbol","iterator","constructor","prototype","Object","defineProperty","exports","value","_lanceTopia","require","_Wiggle","_interopRequireDefault","_Food","__esModule","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","_toPropertyKey","key","_createClass","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","Number","_get","Reflect","get","bind","property","receiver","base","_superPropBase","desc","getOwnPropertyDescriptor","arguments","apply","object","hasOwnProperty","_getPrototypeOf","_inherits","subClass","superClass","create","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","construct","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","WiggleGameEngine","_GameEngine","_super","options","_this","physicsEngine","SimplePhysicsEngine","gameEngine","collisions","autoResolve","on","moveAll","assign","foodRadius","headRadius","bodyRadius","eyeDist","eyeRadius","eyeAngle","spaceWidth","spaceHeight","moveDist","foodCount","eatDistance","collideDistance","startBodyLength","aiCount","directionStop","hungerTick","xpPerBlock","xpPerFood","xpLevelConstant","error","registerClasses","serializer","registerClass","Wiggle","Food","start","randPos","x","Math","random","y","TwoVector","stepInfo","_this2","isReenact","world","forEachObject","id","pos","position","clone","bodyParts","subtract","push","bodyLength","shift","direction","move","cos","sin","multiplyScalar","add","min","max","processInput","inputData","playerId","player","queryObject","GameEngine"],"sources":["../../src/common/WiggleGameEngine.js"],"sourcesContent":["\"use strict\";\n\nimport { GameEngine, SimplePhysicsEngine, TwoVector } from \"@rtsdk/lance-topia\";\nimport Wiggle from \"./Wiggle\";\nimport Food from \"./Food\";\n\nexport default class WiggleGameEngine extends GameEngine {\n  constructor(options) {\n    super(options);\n    this.physicsEngine = new SimplePhysicsEngine({\n      gameEngine: this,\n      collisions: { autoResolve: false },\n    });\n    this.on(\"preStep\", this.moveAll.bind(this));\n\n    // game variables\n    Object.assign(this, {\n      foodRadius: 0.13,\n      headRadius: 0.1,\n      bodyRadius: 0.2,\n      eyeDist: 0.12,\n      eyeRadius: 0.05,\n      eyeAngle: 0.8,\n      spaceWidth: 8,\n      spaceHeight: 20,\n      moveDist: 0.035,\n      foodCount: 25,\n      eatDistance: 0.3,\n      collideDistance: 0.2,\n      startBodyLength: 15,\n      aiCount: 1,\n      directionStop: 100,\n      hungerTick: 0.01,\n      xpPerBlock: 100,\n      xpPerFood: 1,\n      xpLevelConstant: 0.04,\n      error: \"\",\n    });\n  }\n\n  registerClasses(serializer) {\n    serializer.registerClass(Wiggle);\n    serializer.registerClass(Food);\n  }\n\n  start() {\n    super.start();\n  }\n\n  randPos() {\n    let x = (Math.random() - 0.5) * this.spaceWidth;\n    let y = (Math.random() - 0.5) * this.spaceHeight;\n    return new TwoVector(x, y);\n  }\n\n  moveAll(stepInfo) {\n    if (stepInfo.isReenact) return;\n\n    this.world.forEachObject((id, obj) => {\n      if (obj instanceof Wiggle) {\n        // if the position changed, add a body part and trim the length\n        let pos = obj.position.clone();\n        if (obj.bodyParts.length === 0 || pos.subtract(obj.bodyParts[obj.bodyParts.length - 1]).length() > 0.05) {\n          obj.bodyParts.push(obj.position.clone());\n          while (obj.bodyLength < obj.bodyParts.length) obj.bodyParts.shift();\n        }\n\n        // if not stopped, move along\n        if (obj.direction === this.directionStop) return;\n        let move = new TwoVector(Math.cos(obj.direction), Math.sin(obj.direction));\n        move.multiplyScalar(this.moveDist);\n        obj.position.add(move);\n        obj.position.y = Math.min(obj.position.y, this.spaceHeight / 2);\n        obj.position.y = Math.max(obj.position.y, -this.spaceHeight / 2);\n        obj.position.x = Math.min(obj.position.x, this.spaceWidth / 2);\n        obj.position.x = Math.max(obj.position.x, -this.spaceWidth / 2);\n      }\n    });\n  }\n\n  processInput(inputData, playerId) {\n    super.processInput(inputData, playerId);\n\n    // get the player's primary object\n    let player = this.world.queryObject({ playerId });\n    if (player) {\n      player.direction = inputData.input;\n    }\n  }\n}\n"],"mappings":"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"}