name: AWS-Deploy-Push-Prod

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
  
env:
  REGISTRY: '368076259134.dkr.ecr.us-east-1.amazonaws.com'
  REPOSITORY: 'sdk-prod'
  IMAGE_TAG: ${{ github.event.repository.name }}
  GCP_PROJECT_ID: "topia-gcp" #${{ secrets.GCP_PROJECT_ID }}
  GCP_ARTIFACTORY: 'us-west1-docker.pkg.dev'
  GCP_REPOSITORY: 'sdk-apps-prod'
        
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout
jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2 
        with:
          role-to-assume: arn:aws:iam::368076259134:role/github-actions-role
          aws-region: us-east-1
          
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and  tag
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG  .
          
      - name: push docker image to Amazon ECR
        run: |
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: 'projects/1095363050582/locations/global/workloadIdentityPools/workload-identity-pool/providers/github-provider'
          service_account: 'terraform-99@topia-gcp.iam.gserviceaccount.com'
  
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
        with:
          version: '>= 363.0.0'

      # - name: Login to GAR
      #   uses: docker/login-action@v2.2.0
      #   with:
      #     registry: $GCP_ARTIFACTORY
      #     # username: oauth2accesstoken
      #     # password: ${{ steps.auth.outputs.access_token }}
      #     username: _json_key
      #     password: ${{ secrets.GCR_JSON_KEY }}
          
      # - name: Build and push Docker image
      #   run: |
      #     docker tag $REGISTRY/$REPOSITORY:$IMAGE_TAG $GCP_ARTIFACTORY/$GCP_PROJECT_ID/$GCP_REPOSITORY:$IMAGE_TAG
      #     docker push $GCP_ARTIFACTORY/$GCP_PROJECT_ID/$GCP_REPOSITORY:$IMAGE_TAG
  
      # - name: Publish
      #   run: |
      #     aws ecs update-service --service $IMAGE_TAG-svc --force-new-deployment --cluster SDK-Example-CLS
